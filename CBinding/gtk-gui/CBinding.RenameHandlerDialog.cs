
// This file has been generated by the GUI designer. Do not modify.
namespace CBinding
{
	public partial class RenameHandlerDialog
	{
		private global::Gtk.HBox hbox1;

		private global::Gtk.Label renameLabel;

		private global::Gtk.Entry renameEntry;

		private global::Gtk.CheckButton unsafeCheckBox;

		private global::Gtk.Label unsafeLabel;

		private global::Gtk.Button buttonCancel;

		private global::Gtk.Button buttonOk;

		protected virtual void Build()
		{
			global::Stetic.Gui.Initialize(this);
			// Widget CBinding.RenameHandlerDialog
			this.Name = "CBinding.RenameHandlerDialog";
			this.WindowPosition = ((global::Gtk.WindowPosition)(4));
			// Internal child CBinding.RenameHandlerDialog.VBox
			global::Gtk.VBox w1 = this.VBox;
			w1.Name = "dialog1_VBox";
			w1.BorderWidth = ((uint)(2));
			// Container child dialog1_VBox.Gtk.Box+BoxChild
			this.hbox1 = new global::Gtk.HBox();
			this.hbox1.Name = "hbox1";
			this.hbox1.Spacing = 6;
			// Container child hbox1.Gtk.Box+BoxChild
			this.renameLabel = new global::Gtk.Label();
			this.renameLabel.Name = "renameLabel";
			this.renameLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Rename to:");
			this.hbox1.Add(this.renameLabel);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.hbox1[this.renameLabel]));
			w2.Position = 0;
			w2.Expand = false;
			w2.Fill = false;
			// Container child hbox1.Gtk.Box+BoxChild
			this.renameEntry = new global::Gtk.Entry();
			this.renameEntry.CanFocus = true;
			this.renameEntry.Name = "renameEntry";
			this.renameEntry.IsEditable = true;
			this.renameEntry.InvisibleChar = 'â€¢';
			this.hbox1.Add(this.renameEntry);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.hbox1[this.renameEntry]));
			w3.Position = 1;
			w1.Add(this.hbox1);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(w1[this.hbox1]));
			w4.Position = 0;
			w4.Expand = false;
			w4.Fill = false;
			// Container child dialog1_VBox.Gtk.Box+BoxChild
			this.unsafeCheckBox = new global::Gtk.CheckButton();
			this.unsafeCheckBox.CanFocus = true;
			this.unsafeCheckBox.Name = "unsafeCheckBox";
			this.unsafeCheckBox.Label = global::Mono.Unix.Catalog.GetString("Unsafe rename");
			this.unsafeCheckBox.DrawIndicator = true;
			this.unsafeCheckBox.UseUnderline = true;
			w1.Add(this.unsafeCheckBox);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(w1[this.unsafeCheckBox]));
			w5.Position = 1;
			w5.Expand = false;
			w5.Fill = false;
			// Container child dialog1_VBox.Gtk.Box+BoxChild
			this.unsafeLabel = new global::Gtk.Label();
			this.unsafeLabel.Name = "unsafeLabel";
			this.unsafeLabel.LabelProp = global::Mono.Unix.Catalog.GetString("You are trying to rename with a name that is unsafe. To proceed you must check un" +
					"safe, and bear with the consequences!");
			w1.Add(this.unsafeLabel);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(w1[this.unsafeLabel]));
			w6.Position = 2;
			w6.Expand = false;
			w6.Fill = false;
			// Internal child CBinding.RenameHandlerDialog.ActionArea
			global::Gtk.HButtonBox w7 = this.ActionArea;
			w7.Name = "dialog1_ActionArea";
			w7.Spacing = 10;
			w7.BorderWidth = ((uint)(5));
			w7.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
			// Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
			this.buttonCancel = new global::Gtk.Button();
			this.buttonCancel.CanDefault = true;
			this.buttonCancel.CanFocus = true;
			this.buttonCancel.Name = "buttonCancel";
			this.buttonCancel.UseStock = true;
			this.buttonCancel.UseUnderline = true;
			this.buttonCancel.Label = "gtk-cancel";
			this.AddActionWidget(this.buttonCancel, -6);
			global::Gtk.ButtonBox.ButtonBoxChild w8 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w7[this.buttonCancel]));
			w8.Expand = false;
			w8.Fill = false;
			// Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
			this.buttonOk = new global::Gtk.Button();
			this.buttonOk.CanDefault = true;
			this.buttonOk.CanFocus = true;
			this.buttonOk.Name = "buttonOk";
			this.buttonOk.UseStock = true;
			this.buttonOk.UseUnderline = true;
			this.buttonOk.Label = "gtk-ok";
			this.AddActionWidget(this.buttonOk, -5);
			global::Gtk.ButtonBox.ButtonBoxChild w9 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w7[this.buttonOk]));
			w9.Position = 1;
			w9.Expand = false;
			w9.Fill = false;
			if ((this.Child != null))
			{
				this.Child.ShowAll();
			}
			this.DefaultWidth = 742;
			this.DefaultHeight = 108;
			this.unsafeLabel.MnemonicWidget = this.buttonOk;
			this.unsafeLabel.Hide();
			this.Show();
			this.buttonCancel.Clicked += new global::System.EventHandler(this.OnButtonCancelClicked);
			this.buttonOk.Clicked += new global::System.EventHandler(this.OnButtonOkClicked);
		}
	}
}
